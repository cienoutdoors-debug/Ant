name: Android Release (no EAS)

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]

jobs:
  build-android:
    runs-on: ubuntu-latest
    env:
      CI: "false"
      EXPO_NO_TELEMETRY: "1"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Android SDK
        uses: android-actions/setup-android@v3

      - name: Install deps
        run: npm install --no-audit --no-fund

      - name: Prebuild Android (expo -> android/)
        run: npx expo prebuild -p android --no-install

      # ===== Force Kotlin 1.9.25: catalog + properties + settings.gradle resolutionStrategy =====
      - name: Force Kotlin = 1.9.25 (everywhere)
        shell: bash
        run: |
          set -e

          # 1) Version catalog (RN 0.76+)
          TML="android/gradle/libs.versions.toml"
          if [ -f "$TML" ]; then
            cp "$TML" "$TML.bak" || true
            # Đặt phiên bản trong [versions]
            perl -0777 -pe 's/(?m)^\s*kotlin\s*=\s*".*"\s*$/kotlin = "1.9.25"/' "$TML" > tmp.toml || true
            # Nếu có alias plugin tham chiếu trực tiếp version
            perl -0777 -pe 's/(?m)^\s*jetbrains-kotlin-android\s*=\s*".*"\s*$/jetbrains-kotlin-android = "1.9.25"/' tmp.toml > tmp2.toml || true
            mv tmp2.toml "$TML"
          fi

          # 2) gradle.properties để các script đọc -P/props đều nhận
          echo "kotlinVersion=1.9.25" >> android/gradle.properties
          echo "android.kotlinVersion=1.9.25" >> android/gradle.properties

          # 3) Inject resolutionStrategy vào settings.gradle(.kts)
          SGR="android/settings.gradle"
          SKTS="android/settings.gradle.kts"

          inject_groovy() {
            FILE="$1"
            cp "$FILE" "$FILE.bak" || true
            if grep -q "pluginManagement" "$FILE"; then
              # Thêm resolutionStrategy bên trong pluginManagement nếu chưa có
              perl -0777 -pe 's/pluginManagement\s*\{(?![^}]*resolutionStrategy)/pluginManagement {\n    resolutionStrategy {\n      eachPlugin {\n        if (requested.id.id.startsWith("org.jetbrains.kotlin")) {\n          useVersion("1.9.25")\n        }\n      }\n    }\n/s' "$FILE" > tmp.g || true
              mv tmp.g "$FILE"
            else
              # Bọc pluginManagement mới
              cat > tmp.g <<'EOF'
pluginManagement {
  resolutionStrategy {
    eachPlugin {
      if (requested.id.id.startsWith("org.jetbrains.kotlin")) {
        useVersion("1.9.25")
      }
    }
  }
}
EOF
              cat "$FILE" >> tmp.g
              mv tmp.g "$FILE"
            fi
          }

          inject_kts() {
            FILE="$1"
            cp "$FILE" "$FILE.bak" || true
            if grep -q "pluginManagement" "$FILE"; then
              perl -0777 -pe 's/pluginManagement\s*\{(?![^}]*resolutionStrategy)/pluginManagement {\n    resolutionStrategy {\n      eachPlugin {\n        if (requested.id.id.startsWith("org.jetbrains.kotlin")) {\n          useVersion("1.9.25")\n        }\n      }\n    }\n/s' "$FILE" > tmp.k || true
              mv tmp.k "$FILE"
            else
              cat > tmp.k <<'EOF'
pluginManagement {
  resolutionStrategy {
    eachPlugin {
      if (requested.id.id.startsWith("org.jetbrains.kotlin")) {
        useVersion("1.9.25")
      }
    }
  }
}
EOF
              cat "$FILE" >> tmp.k
              mv tmp.k "$FILE"
            fi
          }

          if [ -f "$SGR" ]; then inject_groovy "$SGR"; fi
          if [ -f "$SKTS" ]; then inject_kts "$SKTS"; fi

          echo ">>> Scan kotlin versions AFTER patch:"
          grep -R --line-number -E 'kotlin[^0-9]*1\.9\.[0-9]+' android || true
          echo ">>> gradle.properties tail:"
          tail -n 20 android/gradle.properties || true
          echo ">>> Show settings.gradle(.kts) header:"
          head -n 60 "$SGR" 2>/dev/null || true
          head -n 60 "$SKTS" 2>/dev/null || true

      - name: Make gradlew executable
        run: chmod +x android/gradlew

      # Dùng debug keystore cho release để cài test
      - name: Use debug signing for release
        shell: bash
        run: |
          APP_BUILD_GRADLE="android/app/build.gradle"
          cp "$APP_BUILD_GRADLE" "$APP_BUILD_GRADLE.bak" || true
          perl -0777 -pe "s/release\s*\{([^}]*)signingConfig\s+signingConfigs\.release([^}]*)\}/release {\\1signingConfig signingConfigs.debug\\2}/s" "$APP_BUILD_GRADLE" > tmp.gradle || true
          if ! grep -q "signingConfig signingConfigs.debug" tmp.gradle; then
            perl -0777 -pe "s/buildTypes\s*\{\s*release\s*\{([^}]*)\}/buildTypes { release {\\1\n        signingConfig signingConfigs.debug\n    }}/s" "$APP_BUILD_GRADLE" > tmp2.gradle || true
            mv tmp2.gradle tmp.gradle
          fi
          mv tmp.gradle "$APP_BUILD_GRADLE"

      - name: Build APK (release)
        working-directory: android
        # Ép qua -P để bảo đảm mọi nơi dùng 1.9.25
        run: ./gradlew -Pandroid.kotlinVersion=1.9.25 -Pkotlin.version=1.9.25 :app:assembleRelease

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: android/app/build/outputs/apk/release/app-release.apk
